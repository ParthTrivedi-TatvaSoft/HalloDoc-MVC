@{
    ViewData["Title"] = "viewnotes";
}

@using DataAccess.CustomModels;
@model ViewNotesModel;


<link rel="stylesheet" href="~/css/AdminViewNote.css" />
<div class="container-fluid d-flex justify-content-center row ">

    <div class="col-8">

        <div class="d-flex justify-content-between mt-3">
            <div class="d-flex">
                <h4><strong>View Notes</strong></h4>
            </div>

            <button onclick="location.href='@Url.Action("provider_dashboard", "Provider")'" id="back-btn">&lt; Back</button>

        </div>

        <form id="viewNotesForm" onsubmit="return ViewNoteValidation()">
            @*method="post" asp-action="UpdateNotes" asp-controller="Provider"*@
            <input asp-for="ReqId" hidden />
            <div class="shadow p-3 dashboard-card mt-4 bg-white dark-mode1">

                <hr class="mt-3 mb-0" />


                <div class="row">

                    <div class="col-md-6 col-12">
                        <div class="dropdown  mt-3 ">
                            <button class="btn dark-mode1 shadow dropdown-toggle w-100 text-start notes text-black border-0" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <img src="~/images/transfer-horizontal-svgrepo-com.svg" class="svg mx-2" />
                                Transfer Notes
                            </button>
                            @if (Model.TransferNotesList != null && Model.TransferNotesList.Count > 0)
                            {
                                <ul class="dropdown-menu w-100">
                                    @foreach (var item in Model.TransferNotesList)
                                    {
                                        <li><a class="dropdown-item">@item.Notes on @item.Createddate</a></li>
                                    }
                                </ul>
                            }
                        </div>

                    </div>

                    <div class="col-md-6 col-12">
                        <div class="form-floating dark-mode1 shadow mt-3 notes">
                            <img src="~/images/doctor.svg" class="svg mx-2" />
                            Physician Notes :
                            <span>@Model.PhysicianNotes</span>
                        </div>
                    </div>
                    <div class="col-md-6 col-12">
                        <div class="form-floating shadow dark-mode1 mt-3 notes">
                            <img src="~/images/admin.svg" class="svg mx-2" />
                            Admin Notes :
                            <span>@Model.AdminNotes</span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-12">
                            <div class="form-floating  mt-3">
                                <textarea style="height:100px" class="form-control dark-mode1" placeholder="Leave a comment here" id="notes" asp-for="AdditionalNotes"></textarea>
                                <label for="floatingTextarea2">
                                    Admin Notes

                                </label>
                                <span asp-validation-for="AdditionalNotes" class="text-danger"></span>
                                @*<small id="notesRequired" class="d-none" style=" color:red">Admin Note is required</small>*@
                            </div>

                        </div>

                    </div>
                    <div class="d-flex justify-content-end mt-3 gap-1">
                        <button type="button" onclick="pSubmitViewNotes()" class="btn btn-primary">Save Changes</button>
                    </div>
                </div>
            </div>
        </form>

    </div>
</div>
<partial name="_ValidationScriptsPartial" />
<script>

    function pSubmitViewNotes() {
        if ($("#viewNotesForm").valid()) {
            var payload = $('#viewNotesForm').serializeArray();
            $.ajax({
                url: "/Provider/UpdateNotes",
                type: "POST",
                data: payload,
                success: function (response) {
                    if (response.isUpdated) {
                        pShowViewNotes(response.reqId);
                        toastr.success("Notes Updated");
                    }
                    else {

                        toastr.error("Something went wrong");
                    }

                },
                error: function (e) {
                    alert("Error loading view notes");
                }
            });
        }

    }
        //$('#notes').on('input', function () {
        //    let notes = $("#notes").val();
        //    if (notes != "") {
        //        $("#notesRequired").addClass('d-none').removeClass('d-block');


        //    }
        //    if (notes == "") {
        //        $("#notesRequired").addClass('d-block').removeClass('d-none');
        //    }
        //});

        //function ViewNoteValidation() {
        //    var notes = $("#notes").val();
        //    if (notes == "") {
        //        $("#notesRequired").addClass('d-block').removeClass('d-none');
        //        return false;
        //    } else {
        //        $("#notesRequired").addClass('d-none').removeClass('d-block');
        //        return true;
        //    }

        //}
</script>